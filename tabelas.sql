-- Table: public.livros

-- DROP TABLE IF EXISTS public.livros;

CREATE TABLE IF NOT EXISTS public.livros
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    id_livro bigint NOT NULL,
    titulo character varying(200) COLLATE pg_catalog."default" NOT NULL,
    genero character varying(100) COLLATE pg_catalog."default",
    idioma character varying(10) COLLATE pg_catalog."default",
    imagen character varying(500) COLLATE pg_catalog."default",
    "quantidadeDownload" bigint,
    livro_id bigint,
    quantidade_download bigint,
    CONSTRAINT livros_pkey PRIMARY KEY (id_livro),
    CONSTRAINT livros_id_key UNIQUE (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.livros
    OWNER to postgres;
	
	-- Table: public.autores

-- DROP TABLE IF EXISTS public.autores;

CREATE TABLE IF NOT EXISTS public.autores
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    nome character varying(100) COLLATE pg_catalog."default",
    dt_nascimento bigint,
    dt_falecimento bigint,
    CONSTRAINT autores_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.autores
    OWNER to postgres;
	
	-- Table: public.livro_autor

-- DROP TABLE IF EXISTS public.livro_autor;

CREATE TABLE IF NOT EXISTS public.livro_autor
(
    id_livro bigint NOT NULL,
    id_autor bigint NOT NULL,
    CONSTRAINT pk_livro PRIMARY KEY (id_livro, id_autor),
    CONSTRAINT id_livro FOREIGN KEY (id_livro)
        REFERENCES public.livros (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT livro_autor_id_autor_fkey FOREIGN KEY (id_autor)
        REFERENCES public.autores (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.livro_autor
    OWNER to postgres;